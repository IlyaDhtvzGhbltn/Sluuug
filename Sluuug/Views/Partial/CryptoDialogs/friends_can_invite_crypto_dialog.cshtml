@model Slug.Model.Users.Relations.CryptoDialogUser

@*1 - isonline 2 - isvip*@
@{
    var activeSpan = new Dictionary<Tuple<bool, bool>, string>()
        {
            { new Tuple<bool, bool>(false, true), "offline - нельзя создавать секретный чат"},
            { new Tuple<bool, bool>(false, false), "offline - нельзя создавать секретный чат"},
            { new Tuple<bool, bool>(true, true), "online и доступен для приглашения в чат"},
            { new Tuple<bool, bool>(true, false), "пользователь online, но у вас не активирован VIP статус"}
        };

    var activeClass = new Dictionary<bool, string>()
        {
            { true, "on"},
            { false, "off"}
        };
    var activeDisable = new Dictionary<Tuple<bool, bool>, string>()
    {
            { new Tuple<bool, bool>(false, true), "disabled='disabled'"},
            { new Tuple<bool, bool>(false, false), "disabled='disabled'"},
            { new Tuple<bool, bool>(true, true), ""},
            { new Tuple<bool, bool>(true, false), "disabled='disabled'"}
    };
}
<div class="chat-wrapper-overflow">
    <label>
        <input type="radio" class="fr" name="friend" value="@Model.UserId" @activeDisable[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableToVipContact)] onclick="generationKeyUserToggle()" />
        <div class="circle">
            <div class="circle--inner circle--inner__1"></div>
            <div class="circle--inner circle--inner__2"></div>
            <div class="circle--inner circle--inner__3"></div>
            <div class="circle--inner circle--inner__4"></div>
            <div class="circle--inner circle--inner__5"></div>
            <div class="circle--outer"></div>
        </div>
        <div class="selected-overflow"></div>
        <div class="chat-wrapper">
            <div class="interlocutor-avatar-container">
                <img alt="user avatar" src="@Model.LargeAvatar" />
            </div>
            <div class="conversation-body-container create-conv-container ">
                <div class="interlocutor-name-container">
                    <h2>@Model.Name @Model.SurName</h2>
                </div>
                <div class="last-message-container">
                    <span class="wire-status @activeClass[Model.IsOnline]">@activeSpan[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableToVipContact)]</span>
                </div>
            </div>
            <div class="expiration-period-container">
            </div>
            @if (Model.Vip)
            {
                <img class="vipuser-crown-create-new" src="https://res.cloudinary.com/dlk1sqmj4/image/upload/v1578220125/system/86f6452c09d91a8a507417a473d956d1.png" />
            }
        </div>
    </label>
</div>