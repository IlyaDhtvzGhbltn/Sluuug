@model Slug.Model.VideoConference.VideoConferenceUser
@using Slug.Extensions
@using Context
@*1 -online, 2 - vip access*@
@{
    var activeSpan = new Dictionary<Tuple<bool, bool>, string>()
    {
        { new Tuple<bool, bool>(true, true), "online - доступен для звонка"},
        { new Tuple<bool, bool>(false, true), "offline - не доступен для вызова"},
        { new Tuple<bool, bool>(true, false), "online - но у вас не активен VIP статус"},
        { new Tuple<bool, bool>(false, false), "offline - не доступен для вызова"}
    };

    var activeClass = new Dictionary<Tuple<bool, bool>, string>()
    {
        {  new Tuple<bool, bool>(true, true), "on"},
        {  new Tuple<bool, bool>(false, true), "off"},
        {  new Tuple<bool, bool>(true, false), "pending"},
        {  new Tuple<bool, bool>(false, false), "off"}
    };

    var activeCircleClass = new Dictionary<Tuple<bool, bool>, string>()
    {
        { new Tuple<bool, bool>(true, true), "on-wire-circle"},
        { new Tuple<bool, bool>(false, false), "off-wire-circle"},
        { new Tuple<bool, bool>(false, true), "off-wire-circle"},
        { new Tuple<bool, bool>(true, false), "pen-wire-circle"},
    };

    var activeDisable = new Dictionary<Tuple<bool, bool>, string>()
    {
        { new Tuple<bool, bool>(true, true), ""},
        { new Tuple<bool, bool>(false, false), "disabled='disabled'"},
        { new Tuple<bool, bool>(false, true), "disabled='disabled'"},
        { new Tuple<bool, bool>(true, false), "disabled='disabled'"}
    };

    string declensionOfAge(int age)
    {
        int lastDig = age % 10;
        if (lastDig == 1 && lastDig != 11)
        {
            return "год";
        }
        else if (lastDig >= 2 && lastDig <= 4 && lastDig != 12 && lastDig != 13 && lastDig != 14)
        {
            return "года";
        }
        else
        {
            return "лет";
        }
    }
}

<div class="friend_div" id="@Model.UserId">
    <div class="fr-head">
        @if (Model.IsVip)
        {
            <div class="crown-container">
                <img class="vipuser-crown" src="https://res.cloudinary.com/dlk1sqmj4/image/upload/v1578220125/system/86f6452c09d91a8a507417a473d956d1.png" />
            </div>
        }
            <div class="avatar-info-container">
                <div class="avatar-container">
                    <img class="avatar" src="@Model.Avatar" onclick="redirectToFriend(@Model.UserId)">
                </div>
                <div class="info-container">
                    <div class="align-info-container">
                        <span class="user-name">@Model.Name @Model.Surname</span>
                        <span>@Model.Age @declensionOfAge(Model.Age) @Model.Country ⚈ @Model.City</span>
                        <div class="wire-container">
                            <div class="wire-status-circle @activeCircleClass[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableVipContact)]"></div>
                            <span class="wire-status @activeClass[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableVipContact)]">@activeSpan[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableVipContact)]</span>
                        </div>
                    </div>
                </div>
                <div class="input-container">
                    <input type="radio" class="fr" name="friend" onclick="HideNoneSelectSpan()" value="@Model.UserId" @activeDisable[new Tuple<bool, bool>(Model.IsOnline, Model.AvaliableVipContact)] />
                    <div class="circle">
                        <div class="circle--inner circle--inner__1"></div>
                        <div class="circle--inner circle--inner__2"></div>
                        <div class="circle--inner circle--inner__3"></div>
                        <div class="circle--inner circle--inner__4"></div>
                        <div class="circle--inner circle--inner__5"></div>
                        <div class="circle--outer"></div>
                    </div>
                </div>
            </div>
    </div>
</div>

