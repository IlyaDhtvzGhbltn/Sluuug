
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Logo.cshtml";
    //Layout = "~/Views/Shared/Logo2.cshtml"; // some layouts available
}
@using Slug.Extensions;

<h2>@Html.Translate("Button_Register")</h2>

@using (Html.BeginForm("userconfirmation", "guest", null, FormMethod.Post, new { @id = "reg_subm" }))
{
    <p>
        <input type="text" name="Login" placeholder="@Html.Translate("Register_Login")" required onfocusout="verify_login(this)" /><span id="login_space"></span>
    </p>
    <p>
        <input type="text" name="Name" required placeholder="@Html.Translate("Register_Name")" />
    </p>
    <p>
        <input type="text" name="ForName" required placeholder="@Html.Translate("Register_Surname")" />
    </p>
    <p>
        <select name="CountryCode" id="country_list">
            <option value="1">USA</option>
            <option value="7">Russia</option>
        </select>
    </p>
    <p>
        <input type="email" name="Email" required placeholder="@Html.Translate("Register_email")" onfocusout="verify_email(this)" /><span id="email_space"></span>
    </p>
    <p>
        <input type="date" name="DateBirth" required />
    </p>
    <p>
        <input type="password" name="PasswordHash" required id="psw" placeholder="@Html.Translate("Register_Password")" />
    </p>
    <p>
        <input type="submit" value="@Html.Translate("Button_Register")" id="subm"  />
    </p>
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.2.0/sha.js"></script>
<script>
    var validateError = 0;
    document.getElementById("reg_subm").addEventListener("submit", function (e) {
        var val = document.getElementById("psw").value;
        var shaObj = new jsSHA("SHA-512", "TEXT");
        shaObj.update(val);
        var hash = shaObj.getHash("HEX");
        document.getElementById("psw").value = hash;
    });

    async function verify_login(elem)
    {
        let n_login = elem.value;
        $.ajax({
            url: "/public_api/verify_login",
            type: "post",
            data: { login: n_login }
        })
            .done(function (resp) {
                console.log(resp);
                if (resp == false) {
                    validateError++;
                    getLoginAlreadyTakenView();
                }
                else {
                    validateError--;
                    $('#login_space')[0].innerHTML = '';
                    if (validateError == 0) {
                        $('#subm')[0].disabled = false;
                    }
                }
            });
    }

    async function verify_email(elem) {
        let n_em = elem.value;
        $.ajax({
            url: "/public_api/verify_email",
            type: "post",
            data: { email: n_em }
        })
            .done(function (resp) {
                if (resp == false) {
                    validateError++;
                    getEmailAlreadyTakenView();
                }
                else {
                    validateError--;
                    $('#email_space')[0].innerHTML = '';
                    if (validateError == 0) {
                        $('#subm')[0].disabled = false;
                    }                }
            });
    }

    function getLoginAlreadyTakenView()
    {
        $.ajax({
            url: "/partial/login_already_taken",
            type: "post",
            data: {},
            success: function (response) {
                $('#subm')[0].disabled = true;
                $('#login_space')[0].innerHTML = response;
            }
        });
    }

    function getEmailAlreadyTakenView() {
        $.ajax({
            url: "/partial/email_already_taken",
            type: "post",
            data: {},
            success: function (response) {
                $('#subm')[0].disabled = true;
                $('#email_space')[0].innerHTML = response;
            }
        });
    }
</script>